{"name":"Coffeestack","tagline":"CoffeeScript nodestack website and APIs made easy","body":"CoffeeStack\r\n===========\r\n\r\nPredefined node.js express web stack written in CoffeeScript providing common CRUD actions for account management as an example user case. This layered architecture is an extended MVC which uses data mapper, repository pattern and two step view to achieve a neat separation of concerns between the layers. The application code integrates a basic template for unit, functional, integration tests and HTML rendering template using stylus and mustache. It also provide JSON endpoints which can be called using standard HTTP headers for `Accept` as shown in JSON web service functional test [example](https://github.com/fabriziomoscon/coffeestack/blob/master/test/functional/json/user/create/success.coffee). \r\n\r\nReady to go\r\n-----------\r\n\r\nDownload the code to create an initial web application setup and extend it as you wish.\r\n\r\n```\r\ngit clone git@github.com:fabriziomoscon/coffeestack.git\r\n```\r\n\r\nSetup\r\n-----\r\n\r\nIn `~/.bash_profile` or equivalent:\r\n\r\n```bash\r\nexport PATH=./node_modules/.bin:$PATH\r\nexport NODE_PATH=./:$NODE_PATH\r\n```\r\n\r\nFrom the command line:\r\n\r\n```bash\r\nnpm install\r\n```\r\n\r\n```bash\r\n[sudo] npm install -g supervisor\r\n```\r\n\r\nStart Server\r\n------------\r\n\r\n```bash\r\nnpm start\r\n```\r\n\r\nBrowse localhost\r\n-------------\r\n\r\n[http://localhost:3000/](http://localhost:3000/)\r\n\r\n\r\nRun Tests\r\n---------\r\n\r\n```bash\r\nnpm test\r\n```\r\n\r\nFunctional test using ciao\r\n--------------------------\r\n\r\ninstall ciao globally\r\n```bash\r\nsudo npm install ciao -g\r\n```\r\n\r\nrun the test\r\n\r\nconsole1\r\n```bash\r\nnpm run testing\r\n```\r\n\r\nconsole2 (JSON)\r\n```bash\r\nciao test/functional/json -c test/functional/ciao.json\r\n```\r\n\r\nconsole3 (HTML)\r\n```bash\r\nciao test/functional/html -c test/functional/ciao.json\r\n```\r\n\r\nubuntu\r\n------\r\n\r\nIn order to run nodejs on lower port without root permission the following has been installed and executed\r\n```bash\r\nsudo apt-get install libcap2-bin\r\nsudo setcap cap_net_bind_service=+ep /usr/bin/nodejs\r\nsudo setcap cap_net_bind_service=+ep  /usr/local/lib/node_modules/coffee-script/bin/coffee\r\n```\r\n\r\nIn order to switch between different versions of node we installed nave which can be used easly with the following\r\n```bash\r\nsudo nave usemain 0.10\r\n```\r\n\r\nStart the server as a daemon:\r\n\r\n```bash\r\nnohup npm run supervisor >> /var/www/app.log 2>&1 &\r\n```\r\n\r\nDatabase\r\n--------\r\n\r\nYou can access collections and documents inside the database installing smog on your local machine\r\n\r\n```bash\r\n[sudo] npm install smog -g\r\n```\r\n\r\nand executing it\r\n```bash\r\nsmog &\r\n```\r\n\r\nonce smog is running open a browser to [http://localhost:8080/](http://localhost:8080/) and change `test` to `bizzby` inside the DSN popup\r\n\r\nNOTE\r\n\r\nNODE_PATH='./:$NODE_PATH' and NODE_ENV='staging' must be in ~/.bashrc or exported in the current env\r\n\r\n# Front-end\r\n\r\n## Build environment\r\n\r\nThe front-end code is using [Jake] as a build tool.\r\nJake is installed by npm as one of the dev dependencies.\r\nJake can execute tasks from `Jakefile.coffee`.\r\nRun `jake -T` to see a list of the available tasks.\r\nRun `jake <task name>` to execute a task.\r\nWhen a task depends on some other tasks,\r\nthose other tasks will be executed first.\r\n\r\n## Style\r\n\r\nCSS is compiled from Stylus code.\r\nThe Stylus middleware automatically recompiles\r\nwhen changes are made.\r\n\r\n## Updating CoffeeScript\r\n\r\nThere is a `watch` Jake task\r\nthat can be used to automatically\r\ncompile and bundle front-end CoffeeScript\r\nwhen it is changed.\r\n\r\n[jake]: https://github.com/mde/jake","google":"UA-39941983-1","note":"Don't delete this file! It's used internally to help with page regeneration."}